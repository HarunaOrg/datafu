/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

// Much of this file is a variation on the Apache Samza build.gradle file

buildscript {
  repositories {
      mavenCentral()
  }
}

apply from: file("gradle/dependency-versions-scala-" + scalaVersion + ".gradle")

apply plugin: 'scala'

allprojects {
	// For all scala compilation, add extra compiler options, taken from version-specific
  // dependency-versions-scala file applied above.
  tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = [ scalaOptions ]
	}
}

archivesBaseName = 'datafu-spark_' + scalaVersion

import groovy.xml.MarkupBuilder

cleanEclipse {
  doLast {
    delete ".apt_generated"
    delete ".settings"
    delete ".factorypath"
    delete "bin"
  }
}

// Force scala joint compilation
sourceSets.main.scala.srcDir "src/main/java"
sourceSets.test.scala.srcDir "src/test/java"

// Disable the Javac compiler by forcing joint compilation by scalac. This is equivalent to setting
// tasks.compileTestJava.enabled = false
sourceSets.main.java.srcDirs = []
sourceSets.test.java.srcDirs = []

dependencies {
    compile "org.scala-lang:scala-library:$scalaLibVersion"

    testCompile "com.holdenkarau:spark-testing-base_" + scalaVersion + ":" + sparkVersion + "_0.10.0"
	  testCompile "org.scalatest:scalatest_" + scalaVersion + ":" + sparkVersion
}

// we need to set up the build for hadoop 3
if (hadoopVersion.startsWith("2.")) {
  dependencies {
    compile "org.apache.hadoop:hadoop-common:$hadoopVersion"
    compile "org.apache.hadoop:hadoop-hdfs:$hadoopVersion"
    compile "org.apache.hadoop:hadoop-mapreduce-client-jobclient:$hadoopVersion"
    compile "org.apache.spark:spark-core_" + scalaVersion + ":" + sparkVersion
    compile "org.apache.spark:spark-hive_" + scalaVersion + ":" + sparkVersion
  }
} else {
  dependencies {
    compile "org.apache.hadoop:hadoop-core:$hadoopVersion"
  }
}

test {
  systemProperty 'datafu.jar.dir', file('build/libs')
  systemProperty 'datafu.data.dir', file('data')

  maxHeapSize = "2G"
}
